Bottom: ef6c3099b0804bad729aac8cb6749444d8516519
Top:    fde17e0bf29bfdcf076c6da4ce61a47485cf390e
Author: Jon Smirl <jonsmirl@gmail.com>
Date:   2009-04-25 22:29:30 -0400

Refresh of temp

---

diff --git a/sound/core/pcm_lib.c b/sound/core/pcm_lib.c
index 3133ec6..0f17289 100644
--- a/sound/core/pcm_lib.c
+++ b/sound/core/pcm_lib.c
@@ -232,7 +232,7 @@ static int snd_pcm_update_hw_ptr_interrupt(struct snd_pcm_substream *substream)
 	}
 	printk("delta %ld buffer_size %ld\n", delta, runtime->buffer_size);
 	if (delta < 0) {
-		delta += runtime->buffer_size;
+		delta += runtime->period_size * runtime->periods;
 		if (delta < 0) {
 			hw_ptr_error(substream,
 				     "Unexpected hw_pointer value "
@@ -245,7 +245,7 @@ static int snd_pcm_update_hw_ptr_interrupt(struct snd_pcm_substream *substream)
 			hw_base -= hw_base % runtime->buffer_size;
 			delta = 0;
 		} else {
-			hw_base += runtime->buffer_size;
+			hw_base += runtime->period_size * runtime->periods;
 			if (hw_base >= runtime->boundary)
 				hw_base = 0;
 			new_hw_ptr = hw_base + pos;
diff --git a/sound/soc/fsl/mpc5200_dma.c b/sound/soc/fsl/mpc5200_dma.c
index 4710bc7..b34533a 100644
--- a/sound/soc/fsl/mpc5200_dma.c
+++ b/sound/soc/fsl/mpc5200_dma.c
@@ -103,8 +103,10 @@ static irqreturn_t psc_dma_bcom_irq(int irq, void *_psc_dma_stream)
 
 	/* If the stream is active, then also inform the PCM middle layer
 	 * of the period finished event. */
-	if (s->active)
+	if (s->active) {
+		s->jiffies = jiffies;
 		snd_pcm_period_elapsed(s->stream);
+	}
 
 	return IRQ_HANDLED;
 }
@@ -192,10 +194,10 @@ int mpc5200_dma_trigger(struct snd_pcm_substream *substream, int cmd,
 		s->period_bytes = frames_to_bytes(runtime,
 						  runtime->period_size);
 		s->period_start = virt_to_phys(runtime->dma_area);
-		//s->period_end = s->period_start +
-		//		(s->period_bytes * runtime->periods);
 		s->period_end = s->period_start +
-				frames_to_bytes(runtime, runtime->buffer_size);
+				(s->period_bytes * runtime->periods);
+		//s->period_end = s->period_start +
+			//	frames_to_bytes(runtime, runtime->buffer_size);
 		s->period_next_pt = s->period_start;
 		s->period_current_pt = s->period_start;
 		s->active = 1;
@@ -380,11 +382,13 @@ static int psc_dma_pcm_close(struct snd_pcm_substream *substream)
 static snd_pcm_uframes_t
 psc_dma_pcm_pointer(struct snd_pcm_substream *substream)
 {
+	struct snd_pcm_runtime *runtime = substream->runtime;
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
 	struct psc_dma *psc_dma = rtd->dai->cpu_dai->private_data;
 	struct psc_dma_stream *s;
 	dma_addr_t count;
 	snd_pcm_uframes_t frames;
+	int delta;
 
 	if (substream->pstr->stream == SNDRV_PCM_STREAM_CAPTURE)
 		s = &psc_dma->capture;
@@ -393,9 +397,12 @@ psc_dma_pcm_pointer(struct snd_pcm_substream *substream)
 
 	count = s->period_current_pt - s->period_start;
 
+	delta = jiffies - s->jiffies;
+	delta = delta * runtime->rate / HZ;
+
 	frames = bytes_to_frames(substream->runtime, count);
-	printk("psc_dma_pcm_pointer pos %ld\n", frames);
-	return frames;
+	printk("psc_dma_pcm_pointer pos %ld %d\n", frames, delta);
+	return frames + delta;
 }
 
 static struct snd_pcm_ops psc_dma_pcm_ops = {
diff --git a/sound/soc/fsl/mpc5200_dma.h b/sound/soc/fsl/mpc5200_dma.h
index ae6bc99..12876d5 100644
--- a/sound/soc/fsl/mpc5200_dma.h
+++ b/sound/soc/fsl/mpc5200_dma.h
@@ -31,6 +31,7 @@ struct psc_dma_stream {
 	dma_addr_t period_next_pt;
 	dma_addr_t period_current_pt;
 	int period_bytes;
+	int jiffies;
 };
 
 /**
