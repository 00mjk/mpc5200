Bottom: 7b7279dfda56de45b06309cc5c7b3945d484b979
Top:    1072aea21e6da2e42240e905b6af1fa3325984ee
Author: Jon Smirl <jonsmirl@gmail.com>
Date:   2009-03-28 12:08:18 -0400

Refresh of jds-audio

---

diff --git a/sound/soc/codecs/tas5504.c b/sound/soc/codecs/tas5504.c
index 929baf8..6ac3289 100644
--- a/sound/soc/codecs/tas5504.c
+++ b/sound/soc/codecs/tas5504.c
@@ -296,7 +296,7 @@ static int tas5504_hw_params(struct snd_pcm_substream *substream,
 {
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
 	struct snd_soc_device *socdev = rtd->socdev;
-	struct snd_soc_codec *codec = socdev->codec;
+	struct snd_soc_codec *codec = socdev->card->codec;
 	struct tas5504_priv *priv = codec->private_data;
 
 	dev_dbg(&priv->client->dev, "tas5504_hw_params(substream=%p, params=%p)\n",
@@ -324,6 +324,13 @@ static int tas5504_mute(struct snd_soc_dai *dai, int mute)
 /* ---------------------------------------------------------------------
  * Digital Audio Interface Definition
  */
+
+static struct snd_soc_dai_ops tas5504_dai_ops = {
+	.hw_params = tas5504_hw_params,
+	.digital_mute = tas5504_mute,
+};
+
+
 struct snd_soc_dai tas5504_dai = {
 	.name = "tas5504",
 	.playback = {
@@ -333,10 +340,7 @@ struct snd_soc_dai tas5504_dai = {
 		.rates = TAS5504_RATES,
 		.formats = TAS5504_FORMATS,
 	},
-	.ops = {
-		.hw_params = tas5504_hw_params,
-		.digital_mute = tas5504_mute,
-	},
+	.ops = &tas5504_dai_ops,
 };
 EXPORT_SYMBOL_GPL(tas5504_dai);
 
@@ -703,7 +707,7 @@ static int tas5504_probe(struct platform_device *pdev)
 		return -ENODEV;
 	}
 	codec = &priv->codec;
-	socdev->codec = codec;
+	socdev->card->codec = codec;
 
 	dev_dbg(&pdev->dev, "Registering PCMs, dev=%p, socdev->dev=%p\n",
 		&pdev->dev, socdev->dev);
diff --git a/sound/soc/fsl/dspeak01_fabric.c b/sound/soc/fsl/dspeak01_fabric.c
index 33a2bba..bd35a14 100644
--- a/sound/soc/fsl/dspeak01_fabric.c
+++ b/sound/soc/fsl/dspeak01_fabric.c
@@ -60,7 +60,7 @@ static int dspeak01_fabric_hw_params(struct snd_pcm_substream *substream, struct
 	}
 	max9485_set(fabric.clock, select | MAX9485_CLK_OUT_2);
 
-	ret = cpu_dai->ops.set_sysclk(cpu_dai, MPC52xx_CLK_CELLSLAVE, rate, SND_SOC_CLOCK_OUT);
+	ret = snd_soc_dai_set_sysclk(cpu_dai, MPC52xx_CLK_CELLSLAVE, rate, SND_SOC_CLOCK_OUT);
 	if (ret < 0)
 		return ret;
