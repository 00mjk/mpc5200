Bottom: a505ea798ee848b26ebb55e1db991c04c89ac5b7
Top:    c1ea56fde63b4e7adfbd18edef425d39bf983fb6
Author: Jon Smirl <jonsmirl@gmail.com>
Date:   2009-04-20 10:15:31 -0400

Refresh of tas5504-codec

---

diff --git a/sound/soc/fsl/Kconfig b/sound/soc/fsl/Kconfig
index d480a73..9fc9082 100644
--- a/sound/soc/fsl/Kconfig
+++ b/sound/soc/fsl/Kconfig
@@ -1,23 +1,6 @@
 config SND_SOC_OF_SIMPLE
 	tristate
 
-config SND_MPC52xx_SOC
-	tristate "SoC Audio for the Freescale MPC5200 chip"
-	depends on PPC_MPC52xx && SND_SOC
-	help
-	  Say Y or M if you want to add support for codecs attached to
-	  the MPC5200 AC97 or I2S interface. You will also need
-	  to select the audio interfaces to support below.
-
-config SND_MPC52xx_AC97
-	tristate
-	select SND_AC97_CODEC
-
-config SND_MPC52xx_SOC_AC97
-	tristate
-	select AC97_BUS
-	select SND_SOC_AC97_BUS
-
 # ASoC platform support for the Freescale MPC8610 SOC.  This compiles drivers
 # for the SSI and the Elo DMA controller.  You will still need to select
 # a platform driver and a codec driver.
@@ -43,21 +26,3 @@ config SND_SOC_MPC5200_I2S
 	select PPC_BESTCOMM_GEN_BD
 	help
 	  Say Y here to support the MPC5200 PSCs in I2S mode.
-
-config SND_MPC52xx_SOC_EFIKA
-	tristate "SoC AC97 Audio support for bbplan Efika and STAC9722"
-	depends on SND_MPC52xx_SOC && PPC_EFIKA
-	select SND_MPC52xx_SOC_AC97
-	select SND_SOC_STAC9766
-	help
-	  Say Y if you want to add support for sound on the Efika.
-
-config SND_MPC52xx_SOC_DSPEAK01
-	tristate "SoC I2S Audio support for Digispeaker DSPEAK01 with TAS5504"
-	depends on PPC_DSPEAK01
-	select SND_SOC_MPC5200_I2S
-	select SND_SOC_TAS5504
-	help
-	  Say Y if you want to add support for sound on Digispeaker DSPEAK01.
-
-
diff --git a/sound/soc/fsl/Makefile b/sound/soc/fsl/Makefile
index 70f0084..f85134c 100644
--- a/sound/soc/fsl/Makefile
+++ b/sound/soc/fsl/Makefile
@@ -10,15 +10,5 @@ snd-soc-fsl-ssi-objs := fsl_ssi.o
 snd-soc-fsl-dma-objs := fsl_dma.o
 obj-$(CONFIG_SND_SOC_MPC8610) += snd-soc-fsl-ssi.o snd-soc-fsl-dma.o
 
-# MPC5200 Platform Support
-snd_soc_mpc52xx_ac97_objs += mpc52xx_psc_ac97.o mpc52xx_dma.o
-
 obj-$(CONFIG_SND_SOC_MPC5200_I2S) += mpc5200_psc_i2s.o
-obj-$(CONFIG_SND_MPC52xx_SOC_AC97) += snd_soc_mpc52xx_ac97.o
-
-# MPC5200 Machine Support
-snd_soc_efika_stac9766-objs := efika_stac9766.o
-snd_soc_dspeak01_fabric-objs := dspeak01_fabric.o
 
-obj-$(CONFIG_SND_MPC52xx_SOC_EFIKA) += snd_soc_efika_stac9766.o
-obj-$(CONFIG_SND_MPC52xx_SOC_DSPEAK01) += snd_soc_dspeak01_fabric.o
diff --git a/sound/soc/fsl/dspeak01_fabric.c b/sound/soc/fsl/dspeak01_fabric.c
deleted file mode 100644
index bd35a14..0000000
--- a/sound/soc/fsl/dspeak01_fabric.c
+++ /dev/null
@@ -1,179 +0,0 @@
-/*
- * sound/soc/fsl/dspeak01_fabric.c -- The ALSA glue fabric for Digispeaker dspeak01
- *
- * Copyright 2008 Jon Smirl, Digispeaker
- * Author: Jon Smirl <jonsmirl@gmail.com>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- */
-
-#include <linux/module.h>
-#include <linux/of_device.h>
-#include <linux/of_platform.h>
-#include <linux/of_i2c.h>
-#include <linux/i2c/max9485.h>
-
-#include <sound/soc.h>
-#include <sound/soc-of-simple.h>
-
-#include "mpc5200_psc_i2s.h"
-
-static struct dspeak01_fabric {
-	struct i2c_client *clock;
-} fabric;
-
-static int dspeak01_fabric_startup(struct snd_pcm_substream *substream)
-{
-	printk("dspeak01_fabric_startup\n");
-	return 0;
-}
-
-static void dspeak01_fabric_shutdown(struct snd_pcm_substream *substream)
-{
-	printk("dspeak01_fabric_shutdown\n");
-}
-
-static int dspeak01_fabric_hw_params(struct snd_pcm_substream *substream, struct snd_pcm_hw_params *params)
-{
-	uint rate, select;
-	int ret;
-	struct snd_soc_pcm_runtime *rtd = substream->private_data;
-    struct snd_soc_dai *cpu_dai = rtd->dai->cpu_dai;
-
-	printk("dspeak01_fabric_hw_params\n");
-
-	switch (params_rate(params)) {
-	case 11025:
-	case 22050:
-	case 44100:
-	case 88200:
-	case 176400:
-		rate = 22579200;
-		select = MAX9485_225792;
-		break;
-	default:
-		rate = 24576000;
-		select = MAX9485_245760;
-		break;
-	}
-	max9485_set(fabric.clock, select | MAX9485_CLK_OUT_2);
-
-	ret = snd_soc_dai_set_sysclk(cpu_dai, MPC52xx_CLK_CELLSLAVE, rate, SND_SOC_CLOCK_OUT);
-	if (ret < 0)
-		return ret;
-
-	return 0;
-}
-
-static int dspeak01_fabric_hw_free(struct snd_pcm_substream *substream)
-{
-	printk("dspeak01_fabric_hw_free\n");
-	return 0;
-}
-
-static int dspeak01_fabric_prepare(struct snd_pcm_substream *substream)
-{
-	printk("dspeak01_fabric_prepare\n");
-	return 0;
-}
-
-static int dspeak01_fabric_trigger(struct snd_pcm_substream *substream, int trigger)
-{
-	printk("dspeak01_fabric_trigger\n");
-	return 0;
-}
-
-static struct snd_soc_ops dspeak01_fabric_ops = {
-	.startup = dspeak01_fabric_startup,
-	.shutdown = dspeak01_fabric_shutdown,
-	.hw_params = dspeak01_fabric_hw_params,
-	.hw_free = dspeak01_fabric_hw_free,
-	.prepare = dspeak01_fabric_prepare,
-	.trigger = dspeak01_fabric_trigger,
-};
-
-static int __devinit dspeak01_fabric_probe(struct of_device *op,
-				      const struct of_device_id *match)
-{
-	const phandle *handle;
-	struct device_node *clock_node;
-	unsigned int len;
-
-	handle = of_get_property(op->node, "clock-handle", &len);
-	if (!handle || len < sizeof(handle))
-		return -ENODEV;
-
-	clock_node = of_find_node_by_phandle(*handle);
-	if (!clock_node)
-		return -ENODEV;
-
-	fabric.clock = of_find_i2c_device_by_node(clock_node);
-	if (!fabric.clock)
-		return -ENODEV;
-
-	of_snd_soc_register_machine("DSPEAK01", &dspeak01_fabric_ops);
-	return 0;
-}
-
-static int __exit dspeak01_fabric_remove(struct of_device *op)
-{
-	put_device(&fabric.clock->dev);
-	return 0;
-}
-
-#ifdef CONFIG_PM
-
-static int dspeak01_fabric_suspend(struct of_device *op,
-	pm_message_t state)
-{
-	return 0;
-}
-
-static int dspeak01_fabric_resume(struct of_device *op)
-{
-	return 0;
-}
-
-#else
-#define dspeak01_fabric_suspend NULL
-#define dspeak01_fabric_resume  NULL
-#endif
-
-/* Match table for of_platform binding */
-static struct of_device_id dspeak_fabric_match[] __devinitdata = {
-	{ .compatible = "dspeak01-fabric", },
-	{}
-};
-MODULE_DEVICE_TABLE(of, dspeak_fabric_match);
-
-static struct of_platform_driver dspeak01_fabric_driver = {
-	.match_table = dspeak_fabric_match,
-	.probe		= dspeak01_fabric_probe,
-	.remove		= __devexit_p(dspeak01_fabric_remove),
-	.suspend	= dspeak01_fabric_suspend,
-	.resume		= dspeak01_fabric_resume,
-	.driver		= {
-		.name		= "dspeak01-fabric",
-		.owner		= THIS_MODULE,
-	},
-};
-
-static int __init dspeak01_driver_init(void)
-{
-	return of_register_platform_driver(&dspeak01_fabric_driver);
-}
-
-static void __exit dspeak01_driver_exit(void)
-{
-	of_unregister_platform_driver(&dspeak01_fabric_driver);
-}
-
-module_init(dspeak01_driver_init);
-module_exit(dspeak01_driver_exit);
-
-/* Module information */
-MODULE_AUTHOR("Jon Smirl");
-MODULE_DESCRIPTION("ASOC Digispeaker fabric module");
-MODULE_LICENSE("GPL");
