Bottom: 5b48792dce8b5ea940bef277fb96c7c7f25e3e4b
Top:    94ccc57ece966ee080aed477ca28177cdb800762
Author: Jon Smirl <jonsmirl@gmail.com>
Date:   2009-04-18 13:11:25 -0400

Refresh of efika-stac9766

---

diff --git a/sound/soc/codecs/stac9766.c b/sound/soc/codecs/stac9766.c
index b99c2b1..b915262 100644
--- a/sound/soc/codecs/stac9766.c
+++ b/sound/soc/codecs/stac9766.c
@@ -450,6 +450,7 @@ static int stac9766_codec_probe(struct platform_device *pdev)
 	ret = snd_soc_new_ac97_codec(codec, &soc_ac97_ops, 0);
 	if (ret < 0)
 		goto codec_err;
+	codec->ac97->private_data = platform_get_drvdata(pdev);
 
 	/* register pcms */
 	ret = snd_soc_new_pcms(socdev, SNDRV_DEFAULT_IDX1, SNDRV_DEFAULT_STR1);
@@ -518,9 +519,7 @@ static int __init stac9766_probe(struct platform_device *pdev)
 {
 #if defined(CONFIG_SND_SOC_OF_SIMPLE)
 	/* Tell the of_soc helper about this codec */
-
-	/* fixme -- allocate some unique data */
-	of_snd_soc_register_codec(&soc_codec_dev_stac9766, &soc_codec_dev_stac9766, stac9766_dai,
+	of_snd_soc_register_codec(&soc_codec_dev_stac9766, pdev->dev.archdata.of_node, stac9766_dai,
 				  pdev->dev.archdata.of_node);
 #endif
 	return 0;
diff --git a/sound/soc/fsl/mpc5200_psc_ac97.c b/sound/soc/fsl/mpc5200_psc_ac97.c
index 0563c15..eb17c42 100644
--- a/sound/soc/fsl/mpc5200_psc_ac97.c
+++ b/sound/soc/fsl/mpc5200_psc_ac97.c
@@ -120,11 +120,9 @@ struct psc_ac97 {
 
 #define DRV_NAME "mpc5200-psc-ac97"
 
-static struct psc_ac97 *psc_ac97;
-
 static unsigned short psc_ac97_read(struct snd_ac97 *ac97, unsigned short reg)
 {
-	//struct psc_ac97 *psc_ac97 = ac97->private_data;
+	struct psc_ac97 *psc_ac97 = ac97->private_data;
 	int timeout;
 	unsigned int val;
 
@@ -172,7 +170,7 @@ static unsigned short psc_ac97_read(struct snd_ac97 *ac97, unsigned short reg)
 
 static void psc_ac97_write(struct snd_ac97 *ac97, unsigned short reg, unsigned short val)
 {
-	//struct psc_ac97 *psc_ac97 = ac97->private_data;
+	struct psc_ac97 *psc_ac97 = ac97->private_data;
 	int timeout;
 
 	//printk("ac97 write: reg %04x  val %04x\n", reg, val);
@@ -197,7 +195,7 @@ static void psc_ac97_write(struct snd_ac97 *ac97, unsigned short reg, unsigned s
 
 static void psc_ac97_cold_reset(struct snd_ac97 *ac97)
 {
-	//struct psc_ac97 *psc_ac97 = ac97->private_data;
+	struct psc_ac97 *psc_ac97 = ac97->private_data;
 
 	printk("psc_ac97_cold_reset %p\n", ac97);
 
@@ -509,7 +507,7 @@ static int __devinit psc_ac97_of_probe(struct of_device *op,
 				      const struct of_device_id *match)
 {
 	phys_addr_t fifo;
-	//struct psc_ac97 *psc_ac97;
+	struct psc_ac97 *psc_ac97;
 	struct resource res;
 	int size, psc_id, irq, rc;
 	const __be32 *prop;
@@ -575,7 +573,7 @@ static int __devinit psc_ac97_of_probe(struct of_device *op,
 	out_8(&psc_ac97->psc_regs->command, MPC52xx_PSC_RST_RX); /* reset receiver */
 	out_8(&psc_ac97->psc_regs->command, MPC52xx_PSC_RST_TX); /* reset transmitter */
 	out_8(&psc_ac97->psc_regs->command, MPC52xx_PSC_RST_ERR_STAT); /* reset error */
-	//out_8(&psc_ac97->psc_regs->command, MPC52xx_PSC_SEL_MODE_REG_1); /* reset mode */
+	out_8(&psc_ac97->psc_regs->command, MPC52xx_PSC_SEL_MODE_REG_1); /* reset mode */
 
 	/* Do a cold reset of codec */
 	out_8(&psc_ac97->psc_regs->op1, MPC52xx_PSC_OP_RES);
@@ -631,9 +629,13 @@ static int __devinit psc_ac97_of_probe(struct of_device *op,
 		}
 		request_module("%s", name);
 
-		dev_archdata_set_node(&dev_ad, child);
 		pdev = platform_device_alloc(name, 0);
+
+		platform_set_drvdata(pdev, psc_ac97);
+
+		dev_archdata_set_node(&dev_ad, child);
 		pdev->dev.archdata = dev_ad;
+
 		rc = platform_device_add(pdev);
 		if (rc) {
 			platform_device_put(pdev);
