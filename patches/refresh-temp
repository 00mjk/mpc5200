Bottom: 27c68cea9fb61cb0fb2494ceb9970a064451ed3a
Top:    5e835856447ead093306464a54edfff2ed404a0e
Author: Jon Smirl <jonsmirl@gmail.com>
Date:   2009-05-24 21:22:03 -0400

Refresh of mpc5200-dma

---

diff --git a/sound/soc/fsl/mpc5200_dma.c b/sound/soc/fsl/mpc5200_dma.c
index 56dbb15..4e1f1f8 100644
--- a/sound/soc/fsl/mpc5200_dma.c
+++ b/sound/soc/fsl/mpc5200_dma.c
@@ -434,7 +434,8 @@ static ssize_t psc_dma_status_show(struct device *dev,
 			in_be16(&psc_dma->fifo_regs->tfstat));
 }
 
-static unsigned long *psc_dma_get_stat_attr(struct psc_dma *psc_dma, const char *name)
+static unsigned long *psc_dma_get_stat_attr(struct psc_dma *psc_dma,
+							const char *name)
 {
 	if (strcmp(name, "playback_underrun") == 0)
 		return &psc_dma->stats.underrun_count;
@@ -540,10 +541,14 @@ int mpc5200_audio_dma_create(struct of_device *op)
 
 	/* Disable all interrupts and reset the PSC */
 	out_be16(&psc_dma->psc_regs->isr_imr.imr, psc_dma->imr);
-	out_8(&psc_dma->psc_regs->command, MPC52xx_PSC_RST_RX); /* reset receiver */
-	out_8(&psc_dma->psc_regs->command, MPC52xx_PSC_RST_TX); /* reset transmitter */
-	out_8(&psc_dma->psc_regs->command, MPC52xx_PSC_RST_ERR_STAT); /* reset error */
-	out_8(&psc_dma->psc_regs->command, MPC52xx_PSC_SEL_MODE_REG_1); /* reset mode */
+	 /* reset receiver */
+	out_8(&psc_dma->psc_regs->command, MPC52xx_PSC_RST_RX);
+	 /* reset transmitter */
+	out_8(&psc_dma->psc_regs->command, MPC52xx_PSC_RST_TX);
+	 /* reset error */
+	out_8(&psc_dma->psc_regs->command, MPC52xx_PSC_RST_ERR_STAT);
+	 /* reset mode */
+	out_8(&psc_dma->psc_regs->command, MPC52xx_PSC_SEL_MODE_REG_1);
 
 	/* Set up mode register;
 	 * First write: RxRdy (FIFO Alarm) generates rx FIFO irq
