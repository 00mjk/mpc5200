Bottom: 46126abf8db8ac5421972c1c95c6a7c63e18949a
Top:    fc5adc541e18c6940bef9611c1bbb9c4c809fe57
Author: Jon Smirl <jonsmirl@gmail.com>
Date:   2009-04-27 12:17:49 -0400

Refresh of dma-module

---

diff --git a/sound/soc/fsl/mpc5200_dma.c b/sound/soc/fsl/mpc5200_dma.c
index df73755..621bac8 100644
--- a/sound/soc/fsl/mpc5200_dma.c
+++ b/sound/soc/fsl/mpc5200_dma.c
@@ -113,7 +113,7 @@ static irqreturn_t psc_dma_bcom_irq(int irq, void *_psc_dma_stream)
  * If this is the first stream open, then grab the IRQ and program most of
  * the PSC registers.
  */
-int mpc5200_dma_startup(struct snd_pcm_substream *substream,
+int mpc5200_audio_dma_startup(struct snd_pcm_substream *substream,
 			   struct snd_soc_dai *dai)
 {
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
@@ -145,15 +145,15 @@ int mpc5200_dma_startup(struct snd_pcm_substream *substream,
 
 	return 0;
 }
-EXPORT_SYMBOL_GPL(mpc5200_dma_startup);
+EXPORT_SYMBOL_GPL(mpc5200_audio_dma_startup);
 
-int mpc5200_dma_hw_free(struct snd_pcm_substream *substream,
+int mpc5200_audio_dma_hw_free(struct snd_pcm_substream *substream,
 			   struct snd_soc_dai *dai)
 {
 	snd_pcm_set_runtime_buffer(substream, NULL);
 	return 0;
 }
-EXPORT_SYMBOL_GPL(mpc5200_dma_hw_free);
+EXPORT_SYMBOL_GPL(mpc5200_audio_dma_hw_free);
 
 
 /**
@@ -162,7 +162,7 @@ EXPORT_SYMBOL_GPL(mpc5200_dma_hw_free);
  * This function is called by ALSA to start, stop, pause, and resume the DMA
  * transfer of data.
  */
-int mpc5200_dma_trigger(struct snd_pcm_substream *substream, int cmd,
+int mpc5200_audio_dma_trigger(struct snd_pcm_substream *substream, int cmd,
 			   struct snd_soc_dai *dai)
 {
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
@@ -272,7 +272,7 @@ int mpc5200_dma_trigger(struct snd_pcm_substream *substream, int cmd,
 
 	return 0;
 }
-EXPORT_SYMBOL_GPL(mpc5200_dma_trigger);
+EXPORT_SYMBOL_GPL(mpc5200_audio_dma_trigger);
 
 
 /**
@@ -280,7 +280,7 @@ EXPORT_SYMBOL_GPL(mpc5200_dma_trigger);
  *
  * Shutdown the PSC if there are no other substreams open.
  */
-void mpc5200_dma_shutdown(struct snd_pcm_substream *substream,
+void mpc5200_audio_dma_shutdown(struct snd_pcm_substream *substream,
 			     struct snd_soc_dai *dai)
 {
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
@@ -308,7 +308,7 @@ void mpc5200_dma_shutdown(struct snd_pcm_substream *substream,
 		free_irq(psc_dma->playback.irq, &psc_dma->playback);
 	}
 }
-EXPORT_SYMBOL_GPL(mpc5200_dma_shutdown);
+EXPORT_SYMBOL_GPL(mpc5200_audio_dma_shutdown);
 
 /* ---------------------------------------------------------------------
  * The PSC DMA 'ASoC platform' driver
@@ -454,10 +454,10 @@ static void psc_dma_pcm_free(struct snd_pcm *pcm)
 	}
 }
 
-struct snd_soc_platform mpc5200_dma_platform = {
+struct snd_soc_platform mpc5200_audio_dma_platform = {
 	.name		= "mpc5200-psc-audio",
 	.pcm_ops	= &psc_dma_pcm_ops,
 	.pcm_new	= &psc_dma_pcm_new,
 	.pcm_free	= &psc_dma_pcm_free,
 };
-EXPORT_SYMBOL_GPL(mpc5200_dma_platform);
+EXPORT_SYMBOL_GPL(mpc5200_audio_dma_platform);
diff --git a/sound/soc/fsl/mpc5200_dma.h b/sound/soc/fsl/mpc5200_dma.h
index e52b90e..c5b9ad7 100644
--- a/sound/soc/fsl/mpc5200_dma.h
+++ b/sound/soc/fsl/mpc5200_dma.h
@@ -64,18 +64,18 @@ struct psc_dma {
 };
 
 
-int mpc5200_dma_startup(struct snd_pcm_substream *substream,
+int mpc5200_audio_dma_startup(struct snd_pcm_substream *substream,
 			   struct snd_soc_dai *dai);
 
-int mpc5200_dma_hw_free(struct snd_pcm_substream *substream,
+int mpc5200_audio_dma_hw_free(struct snd_pcm_substream *substream,
 			   struct snd_soc_dai *dai);
 
-void mpc5200_dma_shutdown(struct snd_pcm_substream *substream,
+void mpc5200_audio_dma_shutdown(struct snd_pcm_substream *substream,
 			     struct snd_soc_dai *dai);
 
-int mpc5200_dma_trigger(struct snd_pcm_substream *substream, int cmd,
+int mpc5200_audio_dma_trigger(struct snd_pcm_substream *substream, int cmd,
 			   struct snd_soc_dai *dai);
 
-extern struct snd_soc_platform mpc5200_dma_platform;
+extern struct snd_soc_platform mpc5200_audio_dma_platform;
 
 #endif /* __SOUND_SOC_FSL_MPC5200_DMA_H__ */
diff --git a/sound/soc/fsl/mpc5200_psc_i2s.c b/sound/soc/fsl/mpc5200_psc_i2s.c
index a4a439c..403f72c 100644
--- a/sound/soc/fsl/mpc5200_psc_i2s.c
+++ b/sound/soc/fsl/mpc5200_psc_i2s.c
@@ -140,11 +140,11 @@ static int psc_i2s_set_fmt(struct snd_soc_dai *cpu_dai, unsigned int format)
  * psc_i2s_dai_template: template CPU Digital Audio Interface
  */
 static struct snd_soc_dai_ops psc_i2s_dai_ops = {
-	.startup	= mpc5200_dma_startup,
+	.startup	= mpc5200_audio_dma_startup,
 	.hw_params	= psc_i2s_hw_params,
-	.hw_free	= mpc5200_dma_hw_free,
-	.shutdown	= mpc5200_dma_shutdown,
-	.trigger	= mpc5200_dma_trigger,
+	.hw_free	= mpc5200_audio_dma_hw_free,
+	.shutdown	= mpc5200_audio_dma_shutdown,
+	.trigger	= mpc5200_audio_dma_trigger,
 	.set_sysclk	= psc_i2s_set_sysclk,
 	.set_fmt	= psc_i2s_set_fmt,
 };
@@ -350,10 +350,10 @@ static int __devinit psc_i2s_of_probe(struct of_device *op,
 	if (rc)
 		dev_info(psc_dma->dev, "error creating sysfs files\n");
 
-	snd_soc_register_platform(&mpc5200_dma_platform);
+	snd_soc_register_platform(&mpc5200_audio_dma_platform);
 
 	/* Tell the ASoC OF helpers about it */
-	of_snd_soc_register_platform(&mpc5200_dma_platform, op->node,
+	of_snd_soc_register_platform(&mpc5200_audio_dma_platform, op->node,
 				     &psc_dma->dai);
 
 	return 0;
@@ -365,7 +365,7 @@ static int __devexit psc_i2s_of_remove(struct of_device *op)
 
 	dev_dbg(&op->dev, "psc_i2s_remove()\n");
 
-	snd_soc_unregister_platform(&mpc5200_dma_platform);
+	snd_soc_unregister_platform(&mpc5200_audio_dma_platform);
 
 	bcom_gen_bd_rx_release(psc_dma->capture.bcom_task);
 	bcom_gen_bd_tx_release(psc_dma->playback.bcom_task);
