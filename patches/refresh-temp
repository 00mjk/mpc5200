Bottom: d3e0fe755bc40198bdb3d52894376c03edeb74b2
Top:    aa244baeea24a62a2f56fa9a09f22213c3cf6c77
Author: Jon Smirl <jonsmirl@gmail.com>
Date:   2008-11-02 00:14:57 -0400

Refresh of jds-lirc

---

diff --git a/drivers/input/ir-configfs.c b/drivers/input/ir-configfs.c
index 9b7f784..4b32f2b 100644
--- a/drivers/input/ir-configfs.c
+++ b/drivers/input/ir-configfs.c
@@ -185,26 +185,58 @@ static struct config_item_type remote_type = {
 	.ct_owner	= THIS_MODULE,
 };
 
+struct remote {
+	struct config_group group;
+	struct input_dev *input;
+};
+
+static inline struct remote *to_remote(struct config_group *group)
+{
+	return group ? container_of(group, struct remote, group) : NULL;
+}
 
 /* Top level remotes directory for all remotes */
 
 /* Create a new remote group */
-static struct config_group *remote_make(struct config_group *parent, const char *name)
+static struct config_group *make_remote(struct config_group *parent, const char *name)
 {
-	struct config_group *remote;
+	struct remote *remote;
+	int ret;
 
 	remote = kzalloc(sizeof(*remote), GFP_KERNEL);
 	if (!remote)
 		return ERR_PTR(-ENOMEM);
 
-	config_group_init_type_name(remote, name, &remote_type);
-
-	return remote;
+	remote->input = input_allocate_device();
+	if (!remote->input) {
+		ret = -ENOMEM;
+		goto free_mem;
+	}
+	remote->input->id.bustype = BUS_VIRTUAL;
+	remote->input->name = name;
+	remote->input->phys = "remotes";
+
+	ret = input_register_device(remote->input);
+	if (ret)
+		goto free_input;
+
+	config_group_init_type_name(&remote->group, name, &remote_type);
+	return &remote->group;
+
+ free_input:
+	input_free_device(remote->input);
+ free_mem:
+	kfree(remote);
+	return ERR_PTR(ret);
 }
 
-static void remote_release(struct config_item *remote)
+static void remote_release(struct config_item *item)
 {
-	kfree(to_config_group(remote));
+	struct config_group *group = to_config_group(item);
+	struct remote *remote  = to_remote(group);
+
+	input_free_device(remote->input);
+	kfree(remote);
 }
 
 static ssize_t remotes_show_description(struct config_item *item,
@@ -237,7 +269,7 @@ static struct configfs_attribute *remotes_attrs[] = {
  * no ->drop_item() is provided.
  */
 static struct configfs_group_operations remotes_group_ops = {
-	.make_group	= remote_make,
+	.make_group	= make_remote,
 };
 
 static struct config_item_type remotes_type = {
