Bottom: 672c51c3016414e3217dd8ee8c4716a155d89611
Top:    fcff04c09663251c1811e95f8be26c4f9e8f8898
Author: Jon Smirl <jonsmirl@gmail.com>
Date:   2009-04-23 13:58:15 -0400

Refresh of mpc5200-dma-split

---

diff --git a/sound/soc/fsl/mpc5200_dma.c b/sound/soc/fsl/mpc5200_dma.c
index df229c4..7a32e63 100644
--- a/sound/soc/fsl/mpc5200_dma.c
+++ b/sound/soc/fsl/mpc5200_dma.c
@@ -34,23 +34,6 @@ MODULE_AUTHOR("Grant Likely <grant.likely@secretlab.ca>");
 MODULE_DESCRIPTION("Freescale MPC5200 PSC in DMA mode ASoC Driver");
 MODULE_LICENSE("GPL");
 
-const struct snd_pcm_hardware mpc5200_pcm_hardware = {
-	.info = SNDRV_PCM_INFO_MMAP | SNDRV_PCM_INFO_MMAP_VALID |
-		SNDRV_PCM_INFO_INTERLEAVED | SNDRV_PCM_INFO_BLOCK_TRANSFER,
-	.formats = SNDRV_PCM_FMTBIT_S8 | SNDRV_PCM_FMTBIT_S16_BE |
-		   SNDRV_PCM_FMTBIT_S24_BE | SNDRV_PCM_FMTBIT_S32_BE,
-	.rate_min = 8000,
-	.rate_max = 48000,
-	.channels_min = 2,
-	.channels_max = 2,
-	.period_bytes_max	= 1024 * 1024,
-	.period_bytes_min	= 32,
-	.periods_min		= 2,
-	.periods_max		= 256,
-	.buffer_bytes_max	= 2 * 1024 * 1024,
-	.fifo_size		= 0,
-};
-
 /*
  * Interrupt handlers
  */
@@ -241,6 +224,7 @@ int mpc5200_dma_trigger(struct snd_pcm_substream *substream, int cmd,
 		/* then wait for the transition to high */
 		while ((in_8(&regs->ipcr_acr.ipcr) & 0x80) == 0)
 			;
+
 		/* Finally, enable the PSC.
 		 * Receiver must always be enabled; even when we only want
 		 * transmit.  (see 15.3.2.3 of MPC5200B User's Guide) */
@@ -326,14 +310,6 @@ void mpc5200_dma_shutdown(struct snd_pcm_substream *substream,
 
 
 /* ---------------------------------------------------------------------
- * ALSA SoC Bindings
- *
- * - Digital Audio Interface (DAI) template
- * - create/destroy dai hooks
- */
-
-
-/* ---------------------------------------------------------------------
  * The PSC DMA 'ASoC platform' driver
  *
  * Can be referenced by an 'ASoC machine' driver
