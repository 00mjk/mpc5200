Bottom: c65826557a47314de9efdbf436128ec22315a308
Top:    05d513383a1d959b05805838c5f2e77730a466e9
Author: Jon Smirl <jonsmirl@gmail.com>
Date:   2009-04-28 13:39:29 -0400

Temporary holding patch


---

diff --git a/sound/soc/fsl/mpc5200_dma.c b/sound/soc/fsl/mpc5200_dma.c
index 8ffa2fb..fa5787a 100644
--- a/sound/soc/fsl/mpc5200_dma.c
+++ b/sound/soc/fsl/mpc5200_dma.c
@@ -458,6 +458,30 @@ struct snd_soc_platform mpc5200_audio_dma_platform = {
 };
 EXPORT_SYMBOL_GPL(mpc5200_audio_dma_platform);
 
+int mpc5200_audio_dma_create()
+{
+	return 0;
+}
+EXPORT_SYMBOL_GPL(mpc5200_audio_dma_create);
+
+int mpc5200_audio_dma_destroy(struct of_device *op)
+{
+	struct psc_dma *psc_dma = dev_get_drvdata(&op->dev);
+
+	dev_dbg(&op->dev, "psc_ac97_remove()\n");
+
+	bcom_gen_bd_rx_release(psc_dma->capture.bcom_task);
+	bcom_gen_bd_tx_release(psc_dma->playback.bcom_task);
+
+	iounmap(psc_dma->psc_regs);
+	iounmap(psc_dma->fifo_regs);
+	kfree(psc_dma);
+	dev_set_drvdata(&op->dev, NULL);
+
+	return 0;
+}
+EXPORT_SYMBOL_GPL(mpc5200_audio_dma_destroy);
+
 static int __init mpc5200_soc_platform_init(void)
 {
 	/* Tell the ASoC OF helpers about it */
diff --git a/sound/soc/fsl/mpc5200_dma.h b/sound/soc/fsl/mpc5200_dma.h
index 8ab0a21..5c89642 100644
--- a/sound/soc/fsl/mpc5200_dma.h
+++ b/sound/soc/fsl/mpc5200_dma.h
@@ -70,6 +70,8 @@ struct psc_dma {
 	} stats;
 };
 
+//int mpc5200_audio_dma_create(struct of_device *op, struct snd_soc_dai *template, int tsize);
+int mpc5200_audio_dma_destroy(struct of_device *op);
 
 extern struct snd_soc_platform mpc5200_audio_dma_platform;
 
diff --git a/sound/soc/fsl/mpc5200_psc_ac97.c b/sound/soc/fsl/mpc5200_psc_ac97.c
index cc383a5..0cc64d2 100644
--- a/sound/soc/fsl/mpc5200_psc_ac97.c
+++ b/sound/soc/fsl/mpc5200_psc_ac97.c
@@ -49,7 +49,6 @@ static unsigned short psc_ac97_read(struct snd_ac97 *ac97, unsigned short reg)
 	unsigned int val;
 
 	spin_lock(&psc_dma->lock);
-	//printk("ac97 read: reg %04x\n", reg);
 
 	/* Wait for it to be ready */
 	timeout = 1000;
@@ -84,8 +83,6 @@ static unsigned short psc_ac97_read(struct snd_ac97 *ac97, unsigned short reg)
 	}
 	val = (val >> 8) & 0xffff;
 
-	//printk("ac97 read ok: reg %04x  val %04x\n", reg, val);
-
 	spin_unlock(&psc_dma->lock);
 	return (unsigned short) val;
 }
@@ -95,7 +92,6 @@ static void psc_ac97_write(struct snd_ac97 *ac97, unsigned short reg, unsigned s
 	struct psc_dma *psc_dma = ac97->private_data;
 	int timeout;
 
-	//printk("ac97 write: reg %04x  val %04x\n", reg, val);
 	spin_lock(&psc_dma->lock);
 
 	/* Wait for it to be ready */
@@ -175,11 +171,12 @@ static int psc_ac97_hw_analog_params(struct snd_pcm_substream *substream,
 		params_buffer_size(params), params_buffer_bytes(params),
 		params_channels(params), params_rate(params), params_format(params));
 
-	// FIXME, need a spinlock to protect access
+	spin_lock(&psc_dma->lock);
 	if (params_channels(params) == 1)
-		out_be32(&psc_dma->psc_regs->ac97_slots, 0x01000000);
+		out_be32(&psc_dma->psc_regs->ac97_slots, 0x01000300);
 	else
-		out_be32(&psc_dma->psc_regs->ac97_slots, 0x03000000);
+		out_be32(&psc_dma->psc_regs->ac97_slots, 0x03000300);
+	spin_unlock(&psc_dma->lock);
 
 	return 0;
 }
@@ -188,6 +185,13 @@ static int psc_ac97_hw_digital_params(struct snd_pcm_substream *substream,
 				 struct snd_pcm_hw_params *params,
 				 struct snd_soc_dai *dai)
 {
+	struct snd_soc_pcm_runtime *rtd = substream->private_data;
+	struct psc_dma *psc_dma = rtd->dai->cpu_dai->private_data;
+
+	spin_lock(&psc_dma->lock);
+	out_be32(&psc_dma->psc_regs->ac97_slots, 0x00060000);
+	spin_unlock(&psc_dma->lock);
+
 	return 0;
 }
 
@@ -207,6 +211,7 @@ static int psc_ac97_set_fmt(struct snd_soc_dai *cpu_dai, unsigned int format)
 	struct psc_dma *psc_dma = cpu_dai->private_data;
 	dev_dbg(psc_dma->dev, "psc_ac97_set_fmt(cpu_dai=%p, format=%i)\n",
 				cpu_dai, format);
+
 	return (format == SND_SOC_DAIFMT_AC97) ? 0 : -EINVAL;
 }
 
@@ -365,7 +370,6 @@ static int __devinit psc_ac97_of_probe(struct of_device *op,
 		iounmap(regs);
 		return -ENOMEM;
 	}
-	printk("psc_dma %p\n", psc_dma);
 
 	spin_lock_init(&psc_dma->lock);
 	psc_dma->irq = irq;
@@ -469,19 +473,7 @@ static int __devinit psc_ac97_of_probe(struct of_device *op,
 
 static int __devexit psc_ac97_of_remove(struct of_device *op)
 {
-	struct psc_dma *psc_dma = dev_get_drvdata(&op->dev);
-
-	dev_dbg(&op->dev, "psc_ac97_remove()\n");
-
-	bcom_gen_bd_rx_release(psc_dma->capture.bcom_task);
-	bcom_gen_bd_tx_release(psc_dma->playback.bcom_task);
-
-	iounmap(psc_dma->psc_regs);
-	iounmap(psc_dma->fifo_regs);
-	kfree(psc_dma);
-	dev_set_drvdata(&op->dev, NULL);
-
-	return 0;
+	return mpc5200_audio_dma_destroy(op);
 }
 
 /* Match table for of_platform binding */
