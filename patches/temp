Bottom: e27eff4af742df5e984dd2431efa1b1fddb3339f
Top:    de7c0dfeb655597b6657e58d76087394232e3c44
Author: Jon Smirl <jonsmirl@gmail.com>
Date:   2009-04-25 21:13:53 -0400

temporary holding patch


---

diff --git a/sound/core/pcm_lib.c b/sound/core/pcm_lib.c
index 63d088f..3d9f1af 100644
--- a/sound/core/pcm_lib.c
+++ b/sound/core/pcm_lib.c
@@ -230,7 +230,7 @@ static int snd_pcm_update_hw_ptr_interrupt(struct snd_pcm_substream *substream)
 			delta = new_hw_ptr - hw_ptr_interrupt;
 	}
 	if (delta < 0) {
-		delta += runtime->buffer_size;
+		delta += runtime->period_size * runtime->periods;
 		if (delta < 0) {
 			hw_ptr_error(substream, 
 				     "Unexpected hw_pointer value "
@@ -243,7 +243,7 @@ static int snd_pcm_update_hw_ptr_interrupt(struct snd_pcm_substream *substream)
 			hw_base -= hw_base % runtime->buffer_size;
 			delta = 0;
 		} else {
-			hw_base += runtime->buffer_size;
+			hw_base += runtime->period_size * runtime->periods;
 			if (hw_base >= runtime->boundary)
 				hw_base = 0;
 			new_hw_ptr = hw_base + pos;
diff --git a/sound/soc/codecs/stac9766.c b/sound/soc/codecs/stac9766.c
index 9d60f19..95e69a0 100644
--- a/sound/soc/codecs/stac9766.c
+++ b/sound/soc/codecs/stac9766.c
@@ -291,7 +291,7 @@ static int ac97_analog_prepare(struct snd_pcm_substream *substream,
 	vra = stac9766_ac97_read(codec, reg);
 	printk("rate is %x %x\n", vra, runtime->rate/2);
 
-	return stac9766_ac97_write(codec, reg, runtime->rate/2);
+	return stac9766_ac97_write(codec, reg, runtime->rate);
 }
 
 static int ac97_digital_prepare(struct snd_pcm_substream *substream,
@@ -375,14 +375,14 @@ struct snd_soc_dai stac9766_dai[] = {
 		.channels_min	= 1,
 		.channels_max	= 2,
 		.rates		= SNDRV_PCM_RATE_8000_48000,
-		.formats	= SNDRV_PCM_FORMAT_S32,
+		.formats	= SNDRV_PCM_FMTBIT_S32_BE,
 	},
 	.capture = {
 		.stream_name	= "stac9766 analog",
 		.channels_min	= 1,
 		.channels_max	= 2,
 		.rates		= SNDRV_PCM_RATE_8000_48000,
-		.formats	= SNDRV_PCM_FMTBIT_S32,
+		.formats	= SNDRV_PCM_FMTBIT_S32_BE,
 	},
 	/* alsa ops */
 	.ops = &stac9766_dai_ops_analog,
diff --git a/sound/soc/fsl/mpc5200_dma.c b/sound/soc/fsl/mpc5200_dma.c
index 7cf3ba0..b34533a 100644
--- a/sound/soc/fsl/mpc5200_dma.c
+++ b/sound/soc/fsl/mpc5200_dma.c
@@ -103,8 +103,10 @@ static irqreturn_t psc_dma_bcom_irq(int irq, void *_psc_dma_stream)
 
 	/* If the stream is active, then also inform the PCM middle layer
 	 * of the period finished event. */
-	if (s->active)
+	if (s->active) {
+		s->jiffies = jiffies;
 		snd_pcm_period_elapsed(s->stream);
+	}
 
 	return IRQ_HANDLED;
 }
@@ -194,6 +196,8 @@ int mpc5200_dma_trigger(struct snd_pcm_substream *substream, int cmd,
 		s->period_start = virt_to_phys(runtime->dma_area);
 		s->period_end = s->period_start +
 				(s->period_bytes * runtime->periods);
+		//s->period_end = s->period_start +
+			//	frames_to_bytes(runtime, runtime->buffer_size);
 		s->period_next_pt = s->period_start;
 		s->period_current_pt = s->period_start;
 		s->active = 1;
@@ -330,7 +334,7 @@ static const struct snd_pcm_hardware psc_dma_pcm_hardware = {
 	.rate_min = 8000,
 	.rate_max = 48000,
 	.channels_min = 2,
-	.channels_max = 1,
+	.channels_max = 2,
 	.period_bytes_max	= 1024 * 1024,
 	.period_bytes_min	= 32,
 	.periods_min		= 2,
@@ -378,10 +382,13 @@ static int psc_dma_pcm_close(struct snd_pcm_substream *substream)
 static snd_pcm_uframes_t
 psc_dma_pcm_pointer(struct snd_pcm_substream *substream)
 {
+	struct snd_pcm_runtime *runtime = substream->runtime;
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
 	struct psc_dma *psc_dma = rtd->dai->cpu_dai->private_data;
 	struct psc_dma_stream *s;
 	dma_addr_t count;
+	snd_pcm_uframes_t frames;
+	int delta;
 
 	if (substream->pstr->stream == SNDRV_PCM_STREAM_CAPTURE)
 		s = &psc_dma->capture;
@@ -390,7 +397,12 @@ psc_dma_pcm_pointer(struct snd_pcm_substream *substream)
 
 	count = s->period_current_pt - s->period_start;
 
-	return bytes_to_frames(substream->runtime, count);
+	delta = jiffies - s->jiffies;
+	delta = delta * runtime->rate / HZ;
+
+	frames = bytes_to_frames(substream->runtime, count);
+	printk("psc_dma_pcm_pointer pos %ld %d\n", frames, delta);
+	return frames + delta;
 }
 
 static struct snd_pcm_ops psc_dma_pcm_ops = {
diff --git a/sound/soc/fsl/mpc5200_dma.h b/sound/soc/fsl/mpc5200_dma.h
index ae6bc99..12876d5 100644
--- a/sound/soc/fsl/mpc5200_dma.h
+++ b/sound/soc/fsl/mpc5200_dma.h
@@ -31,6 +31,7 @@ struct psc_dma_stream {
 	dma_addr_t period_next_pt;
 	dma_addr_t period_current_pt;
 	int period_bytes;
+	int jiffies;
 };
 
 /**
diff --git a/sound/soc/fsl/mpc5200_psc_ac97.c b/sound/soc/fsl/mpc5200_psc_ac97.c
index 66981ee..5e91163 100644
--- a/sound/soc/fsl/mpc5200_psc_ac97.c
+++ b/sound/soc/fsl/mpc5200_psc_ac97.c
@@ -169,11 +169,11 @@ static int psc_ac97_hw_analog_params(struct snd_pcm_substream *substream,
 
 	dev_dbg(psc_dma->dev, "%s(substream=%p) p_size=%i p_bytes=%i"
 		" periods=%i buffer_size=%i  buffer_bytes=%i channels=%i"
-		" rate=%i\n",
+		" rate=%i format=%i\n",
 		__func__, substream, params_period_size(params),
 		params_period_bytes(params), params_periods(params),
 		params_buffer_size(params), params_buffer_bytes(params),
-		params_channels(params), params_rate(params));
+		params_channels(params), params_rate(params), params_format(params));
 
 	// FIXME, need a spinlock to protect access
 	if (params_channels(params) == 1)
@@ -249,7 +249,7 @@ static struct snd_soc_dai psc_ac97_dai_template[] = {
 		.channels_min	= 1,
 		.channels_max	= 6,
 		.rates		= SNDRV_PCM_RATE_8000_48000,
-		.formats	= SNDRV_PCM_FORMAT_S32_BE,
+		.formats	= SNDRV_PCM_FMTBIT_S32_BE,
 	},
 	.capture = {
 		.channels_min	= 1,
